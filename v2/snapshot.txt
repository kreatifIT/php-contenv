==================================================
 Directory Snapshot
==================================================
Source Path:   /Users/manpreet/Desktop/projects/priv/php-contenv/v2/examples
Generated on:  Tue Sep  2 21:16:35 CEST 2025
Ignored Dirs:  .git|.venv|.container-history
Ignored Files: *.txt|LICENSE|grabber.sh
--------------------------------------------------

### DIRECTORY TREE ###

examples//
├── .docker-snippets/
│   ├── overlays/
│   │   └── helloworld-svc/
│   │       └── service.d/
│   │           ├── finish
│   │           ├── run
│   │           └── type
│   ├── php/
│   │   └── custom.ini
│   ├── readme.md
│   └── scripts/
│       └── hw.sh
└── docker-compose-files/
    ├── docker-compose.js.yml
    └── docker-compose.simple.yml

8 directories, 8 files

---

### FILE: docker-compose-files/docker-compose.js.yml ###

services:
  app:
    container_name: my-app
    build:
      context: .docker/v2
      dockerfile: php/8.4/nginx/Dockerfile
      args:
        # --- When building the image, we tell to add also node v22 version ---
        JS_RUNTIME_REQUIRE_NODE: ${JS_RUNTIME_REQUIRE_NODE:-true}
        JS_RUNTIME_NODE_VERSION: ${JS_RUNTIME_NODE_VERSION:-22}
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
    networks:
      - maninet
# Define the shared network for all services
networks:
  maninet:
    driver: bridge


---

### FILE: docker-compose-files/docker-compose.simple.yml ###

# Simple Docker Compose file for a single PHP app using Nginx
# This example uses PHP 8.4 with Nginx in development mode.
# It mounts the current directory into the container for live development.
# services.app.build.context points to the .docker/v2 directory, where docker can see downwards all the files for building the image.
# services.app.ports: 8080:80 maps port 8080 on the host to port 80 in the container. app runs on port 80 in the container and can be access outside using port 8080.
services:
  app:
    container_name: my-app
    build:
      context: .docker/v2
      dockerfile: php/8.4/nginx/Dockerfile
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
    networks:
      - maninet
# Define the shared network for all services
networks:
  maninet:
    driver: bridge


---

### FILE: .docker-snippets/overlays/helloworld-svc/service.d/type ###

longrun
---

### FILE: .docker-snippets/overlays/helloworld-svc/service.d/finish ###

#!/usr/bin/env bash

echo "[hello-world] Custom service is shutting down."
exit 0

---

### FILE: .docker-snippets/overlays/helloworld-svc/service.d/run ###

#!/usr/bin/env bash

set -e
echo "[hello-world] Custom service started. Logging a message every 10 seconds."

while true; do
  echo "[hello-world] Hello from your custom overlay service! The time is $(date)."
  sleep 10
done

---

### FILE: .docker-snippets/php/custom.ini ###


---

### FILE: .docker-snippets/readme.md ###

This contains an example how you can extend the docker environment

### overlays
#### what is the purpose?
you can add or create more processes when contain is initiated
#### what contains?
Simple hello world service
#### How it works?
#### How it is used?

### php
#### What is the purpose?
#### What contains?
Mainly you can pass *ini files
#### How it works?
#### How it is used?

### scripts
#### What is the purpose?
Add custom scripts in it or install something in container like python
#### what contains?
Simple hello world service


---

### FILE: .docker-snippets/scripts/hw.sh ###

#!/usr/bin/env bash

echo "Hello, world!"

